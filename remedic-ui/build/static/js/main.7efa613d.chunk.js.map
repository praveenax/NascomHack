{"version":3,"sources":["Lifesavers.png","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","RangePicker","DatePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","Home","props","style","padding","width","paddingTop","marginBottom","fontSize","color","src","logo","preview","gutter","className","to","type","icon","PlusOutlined","size","UnorderedListOutlined","HeartOutlined","About","AddNew","config","rules","required","message","onBack","title","subTitle","extra","name","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","label","Group","Button","value","List","validator","_","names","a","length","Promise","reject","Error","fields","add","remove","errors","map","field","index","key","validateTrigger","whitespace","noStyle","placeholder","float","marginLeft","MinusCircleOutlined","onClick","ErrorList","htmlType","columns","dataIndex","render","tags","tag","indexOf","toUpperCase","text","record","EditOutlined","DeleteOutlined","dataSource","age","address","Care","useState","displayType","setDisplayType","data","year","height","xField","yField","point","shape","level","checkedChildren","unCheckedChildren","defaultChecked","onChange","checked","margin","mode","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7efa613d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Lifesavers.28a14e8a.png\";","import \"./App.css\";\nimport logo from \"./Lifesavers.png\";\nimport {useState} from 'react';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Row,\n  Col,\n  Image,\n  Typography,\n  PageHeader,\n  Table,\n  Tag,\n  Space,\n  Form,\n  Input,\n  InputNumber,\n  // Checkbox,\n  Radio,\n  DatePicker,\n  // RangePicker,\n  TimePicker,\n  Card,\n  Timeline,\n  Switch\n} from \"antd\";\n\nimport { Line } from '@ant-design/charts';\n\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  UnorderedListOutlined,\n  HeartOutlined,\n  MinusCircleOutlined,\n  // ClockCircleOutlined,\n} from \"@ant-design/icons\";\nconst { Title } = Typography;\n\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: { span: 24, offset: 0 },\n    sm: { span: 20, offset: 4 },\n  },\n};\n\nfunction App() {\n  // const style = { padding: '8px 0' };\n  // const titleStyle = { marginTop:'10%',marginBottom:'20%', fontSize:'50px' };\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"addnew\" element={<AddNew />} />\n        <Route path=\"list\" element={<List />} />\n        <Route path=\"care\" element={<Care />} />\n      </Routes>\n      {/* <header className=\"App-header\"> */}\n      {/* <BellOutlined /> */}\n\n      {/* </header> */}\n    </div>\n  );\n}\n\nfunction Home(props) {\n  // const history = useHistory();\n  const style = { padding: \"8px 0\", width: \"100%\" };\n  const titleStyle = {\n    paddingTop: \"10%\",\n    marginBottom: \"30px\",\n    fontSize: \"40px\",\n    // fontFamily: 'Bebas Neue',\n    color: \"#604AF6\",\n  };\n\n  // const care = () => {\n  //   //move to new page\n  //   console.log(\"care\");\n  // };\n\n  return (\n    <>\n      <Title style={titleStyle}>Pill Oh!</Title>\n\n      <Image width={200} src={logo} preview={false} />\n\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={8}>\n          <div style={style}>\n            <Link to=\"/addnew\">\n           \n              <Button type=\"primary\" className=\"home-btn\" icon={<PlusOutlined />} size={'large'}>\n               Add\n              </Button>\n            </Link>\n          </div>\n        </Col>\n        <Col className=\"gutter-row\" span={8}>\n          <div style={style}>\n            <Link to=\"/list\">\n            <Button type=\"primary\" className=\"home-btn\" icon={<UnorderedListOutlined />} size={'large'}>\n            List\n              </Button>\n              \n            </Link>\n            {/* <Button type=\"primary\" onClick={()=>scan()}>Scan</Button> */}\n          </div>\n        </Col>\n        <Col className=\"gutter-row\" span={8}>\n          <div style={style}>\n            <Link to=\"/care\">\n            <Button type=\"primary\" className=\"home-btn\" icon={<HeartOutlined />} size={'large'}>\n            Care\n              </Button>\n             \n            </Link>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction About() {\n  return (\n    <>\n      <main>\n        <h2>Who are we?</h2>\n        <p>That feels like an existential question, don't you think?</p>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n  );\n}\n\nfunction AddNew() {\n  const config = {\n    rules: [\n      {\n        type: \"object\",\n        required: true,\n        message: \"Please select time!\",\n      },\n    ],\n  };\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return (\n    <>\n      <Link to=\"/\">\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => null}\n          title=\"Add New\"\n          subTitle=\"\"\n          extra={[\n            <Button key=\"1\" type=\"primary\">\n              Save\n            </Button>,\n          ]}\n        />\n      </Link>\n      <div className=\"addnew-form\">\n        <Form\n          name=\"basic\"\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 20,\n          }}\n          initialValues={{\n            remember: false,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your name!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Age\"\n            name=\"age\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your age!\",\n              },\n            ]}\n          >\n            <InputNumber />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Sex\"\n            name=\"sex\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your age!\",\n              },\n            ]}\n          >\n            <Radio.Group>\n              <Radio.Button value={\"male\"}>Male</Radio.Button>\n              <Radio.Button value={\"female\"}>Female</Radio.Button>\n              <Radio.Button value={\"other\"}>Other</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.List\n            name=\"names\"\n            rules={[\n              {\n                validator: async (_, names) => {\n                  if (!names || names.length < 2) {\n                    return Promise.reject(new Error(\"At least 1 tablet\"));\n                  }\n                },\n              },\n            ]}\n          >\n            {(fields, { add, remove }, { errors }) => (\n              <>\n                {fields.map((field, index) => (\n                  <Card style={{ width: 300 }}>\n                    <Form.Item\n                      {...(index === 0\n                        ? formItemLayout\n                        : formItemLayoutWithOutLabel)}\n                      label={index === 0 ? \"Tablets\" : \"\"}\n                      required={false}\n                      key={field.key}\n                    >\n                      <Form.Item\n                        {...field}\n                        validateTrigger={[\"onChange\", \"onBlur\"]}\n                        rules={[\n                          {\n                            required: true,\n                            whitespace: true,\n                            message:\n                              \"Please input tablet's name or delete this field.\",\n                          },\n                        ]}\n                        noStyle\n                      >\n                        <Input\n                          placeholder=\"tablet name\"\n                          style={{ width: \"60%\", float: \"left\" }}\n                        />\n\n                        {/* <Input placeholder=\"number\" style={{ width: '20%' }} /> */}\n                      </Form.Item>\n\n                      <Form.Item\n                        {...field}\n                        validateTrigger={[\"onChange\", \"onBlur\"]}\n                        rules={[\n                          {\n                            required: true,\n                            whitespace: true,\n                            message:\n                              \"Please input tablet's name or delete this field.\",\n                          },\n                        ]}\n                        noStyle\n                      >\n                        {/* <Input placeholder=\"tablet name\" style={{ width: '40%' }} /> */}\n\n                        <Input\n                          placeholder=\"number\"\n                          style={{\n                            width: \"30%\",\n                            marginLeft: \"10%\",\n                            float: \"left\",\n                          }}\n                        />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"date-picker\"\n                        label=\"Select Day Range\"\n                        {...config}\n                        style={{ width: \"100%\" }}\n                      >\n                        {/* <DatePicker /> */}\n                        <RangePicker />\n                        <Form.Item\n                          name=\"time-picker\"\n                          label=\"Select a time\"\n                          {...config}\n                        >\n                          <TimePicker />\n                        </Form.Item>\n                      </Form.Item>\n                      {fields.length > 1 ? (\n                        <MinusCircleOutlined\n                          className=\"dynamic-delete-button\"\n                          onClick={() => remove(field.name)}\n                        />\n                      ) : null}\n                    </Form.Item>\n                  </Card>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    // style={{ width: \"60%\" }}\n                    icon={<PlusOutlined />}\n                  >\n                    Add Prescription\n                  </Button>\n\n                  <Form.ErrorList errors={errors} />\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Save\n            </Button>\n            {/* <Button type=\"default\" htmlType=\"submit\">\n          Cancel\n        </Button> */}\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  );\n}\n\nfunction List() {\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      // render: text => <a href=\"\" alt=\"\">{text}</a>,\n    },\n\n    {\n      title: \"Tags\",\n      key: \"tags\",\n      dataIndex: \"tags\",\n      render: (tags) => (\n        <>\n          {tags.map((tag) => {\n            let color = tag.length > 5 ? \"geekblue\" : \"green\";\n            if (tag === \"loser\") {\n              color = \"volcano\";\n            }\n\n            if (tag.indexOf(\"AM\") !== -1) {\n              return (\n                <Tag color={color} key={tag}>\n                  TIME: {tag.toUpperCase()}\n                </Tag>\n              );\n            } else {\n              return (\n                <Tag color={color} key={tag}>\n                  {tag.toUpperCase()}\n                </Tag>\n              );\n            }\n          })}\n        </>\n      ),\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <EditOutlined />\n          <DeleteOutlined />\n\n          {/* <a>Invite {record.name}</a>\n          <a>Delete</a> */}\n        </Space>\n      ),\n    },\n  ];\n\n  const data = [\n    {\n      key: \"1\",\n      name: \"John Brown\",\n      age: 32,\n      address: \"New York No. 1 Lake Park\",\n      tags: [\"Synthroid\", \"Crestor\", \"Daily\", \"9pm\", \"10am\"],\n    },\n    {\n      key: \"2\",\n      name: \"Jim Green\",\n      age: 42,\n      address: \"London No. 1 Lake Park\",\n      tags: [\"Nexium\"],\n    },\n    {\n      key: \"4\",\n      name: \"Gokul\",\n      age: 24,\n      address: \"London No. 1 Lake Park\",\n      tags: [\"Fish Oil\",\"Daily\",\"9pm\"],\n    },\n    {\n      key: \"3\",\n      name: \"Joe Black\",\n      age: 32,\n      address: \"Sidney No. 1 Lake Park\",\n      tags: [\"Lyrica \"],\n    },\n  ];\n  return (\n    <>\n      <Link to=\"/\">\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => null}\n          title=\"List\"\n          subTitle=\"\"\n        />\n      </Link>\n      <div style={{ padding: \"1%\" }}>\n        <Table columns={columns} dataSource={data} />\n      </div>\n    </>\n  );\n}\n\nfunction Care() {\n\n  const [displayType,setDisplayType] = useState(true)\n  const data = [\n    { year: \"21-Nov\", value: 2 },\n    { year: \"22-Nov\", value: 2 },\n    { year: \"23-Nov\", value: 0 },\n    { year: \"24-Nov\", value: 2 },\n    { year: \"25-Nov\", value: 0 },\n    \n  ];\n\n  const config = {\n    data,\n    height: 200,\n    xField: \"year\",\n    yField: \"value\",\n    point: {\n      size: 5,\n      shape: \"diamond\",\n    },\n  };\n\n  const onChange = (checked) => {\n    setDisplayType(checked)\n    console.log(`switch to ${checked}`);\n  }\n\n  return (\n    <>\n      <Link to=\"/\">\n        <PageHeader\n          className=\"site-page-header\"\n          onBack={() => null}\n          title=\"Care\"\n          subTitle=\"\"\n         \n        />\n      </Link>\n      <div style={{ padding: \"1%\" }}>\n\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={16}>\n        <Title level={5}>Patient Messaging Review</Title>\n\n          </Col>\n          <Col className=\"gutter-row\" span={8}>\n        \n\n<Switch style={{marginBottom:'10%'}} checkedChildren=\"Chart\" unCheckedChildren=\"Timeline\" defaultChecked onChange={onChange} />\n          </Col>\n          </Row>\n      \n      <br/>\n        {\n          displayType && (\n            <Line {...config} style={{width:'80%',margin:'auto',marginBottom:'5%'}} />\n          )\n        }\n\n        {\n          !displayType && (\n            <div style={{padding:'1%'}}>\n            <Timeline mode=\"alternate\" >\n            <Timeline.Item>Created reminder for Nexium on 21-Nov-2021 to 25-Nov-2021</Timeline.Item>\n            <Timeline.Item color=\"green\">\n              Reminder successful on 21-Nov-2021\n            </Timeline.Item>\n            <Timeline.Item color=\"green\">\n              Reminder successful on 22-Nov-2021\n            </Timeline.Item>\n            <Timeline.Item color=\"red\">\n              Reminder successful on 23-Nov-2021\n            </Timeline.Item>\n            <Timeline.Item color=\"green\">\n              Reminder successful on 24-Nov-2021\n            </Timeline.Item>\n            <Timeline.Item color=\"red\">\n              Reminder fail on 25-Nov-2021\n            </Timeline.Item>\n            \n          </Timeline>\n          </div>\n          )\n        }\n        \n       \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}